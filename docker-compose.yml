version: '3'

services:

  node-api:
    container_name: node-api
    build: .
    working_dir: /usr/src/app
    entrypoint: /usr/src/app/.docker/entrypoint.sh
    depends_on:
      - postgres-database
      - keycloak-auth
    ports:
      - '3000:3000'
      - '9229:9229'
    volumes:
      - ./:/usr/src/app/
    networks:
      - application-network

  postgres-database:
    container_name: postgres-database
    build: ./.docker/database
    ports:
      - '5432:5432'
    volumes:
      - database-data:/var/lib/postgresql/data
    networks:
      - application-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=ucycle_app,keycloak

  keycloak-auth:
    container_name: keycloak-auth
    image: quay.io/keycloak/keycloak:21.0.1
    command:
      - start-dev
    depends_on:
      - postgres-database
    ports:
      - '8080:8080'
    networks:
      - application-network
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_PORT=5432
      - KC_DB_URL_HOST=postgres-database
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_SCHEMA=public
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true

  aws-s3:
    container_name: s3
    build: ./.docker/aws-s3
    ports:
      - "9000:9000"
    volumes:
      - aws-s3:/home/sirius/data
    networks:
      - application-network

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./.docker/ngrok/ngrok.yml:/etc/ngrok.yml
    networks:
      - application-network
    ports:
      - "4040:4040"

networks:
  application-network:
    driver: bridge

volumes:
  database-data:
  aws-s3:
